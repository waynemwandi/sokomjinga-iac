services:
  db:
    image: mysql:8.0
    restart: unless-stopped
    env_file: .env
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    networks: [private]
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-p${MYSQL_ROOT_PASSWORD}",
        ]
      interval: 10s
      timeout: 5s
      retries: 10

  api:
    build:
      context: ../sokomjinga-api
    restart: unless-stopped
    env_file: .env
    environment:
      DATABASE_URL: mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@db:3306/${MYSQL_DATABASE}
      DB_HOST: db
      DB_PORT: 3306
      # Uncomment ONLY if your DB already has the full schema but no alembic_version row:
      # ALEMBIC_STAMP_HEAD: "true"
    depends_on:
      db:
        condition: service_healthy
    networks: [private]

  frontend:
    build:
      context: ../sokomjinga-frontend
    restart: unless-stopped
    networks: [private]

  # Nginx proxy (default for local)
  proxy-nginx:
    image: nginx:1.27-alpine
    restart: unless-stopped
    depends_on: [api, frontend]
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks: [private]
    profiles: ["nginx"] # <-- starts when you select this profile

  # Caddy proxy (for EC2/prod with HTTPS)
  proxy-caddy:
    image: caddy:2
    restart: unless-stopped
    depends_on: [api, frontend]
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data # certs live here
      - caddy_config:/config
    networks: [private]
    profiles: ["caddy"] # <-- starts when you select this profile

volumes:
  db_data:
  caddy_data:
  caddy_config:

networks:
  private:
    driver: bridge
